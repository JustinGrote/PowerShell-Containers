ARG TAG=latest
ARG PS_VERSION=7.4.0
ARG PS_PACKAGE=powershell-${PS_VERSION}-linux-musl-x64.tar.gz
ARG PS_PACKAGE_URL=https://github.com/PowerShell/PowerShell/releases/download/v${PS_VERSION}/${PS_PACKAGE}
ARG PS_INSTALL_FOLDER=/opt/microsoft/powershell/7

FROM alpine:${tag} as install-powershell
RUN mkdir -p ${PS_INSTALL_FOLDER}
# Download PowerShell and extract it
ADD ${PS_PACKAGE_URL} /tmp/linux.tar.gz
RUN tar zxf /tmp/linux.tar.gz -C ${PS_INSTALL_FOLDER} -v

#Copy the deployed PowerShell
FROM alpine:${tag}
COPY --from=installer-env ["/opt/microsoft/powershell", "/opt/microsoft/powershell"]


# Define ENVs for Localization/Globalization
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8

# set a fixed location for the Module analysis cache
ENV PSModuleAnalysisCachePath=/var/cache/microsoft/powershell/PSModuleAnalysisCache/ModuleAnalysisCache
ENV POWERSHELL_DISTRIBUTION_CHANNEL=JustinGrote-PowerShell-Containers-Alpine-${tag}

#Initialize Module Cache
ARG PS_INSTALL_FOLDER

# RUN apk add --no-cache \
#   ca-certificates \
#   less \
#   # PSReadline/console dependencies
#   ncurses-terminfo-base \
#   # .NET Core dependencies
#   krb5-libs \
#   libgcc \
#   libintl \
#   libssl1.1 \
#   libstdc++ \
#   tzdata \
#   userspace-rcu \
#   zlib \
#   icu-libs \
#   && apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache \
#   lttng-ust \
#   \
#   # PowerShell remoting over SSH dependencies
#   openssh-client \
#   \
#   && apk update \
#   && apk upgrade

RUN EOF
# Create the pwsh symbolic link that points to powershell
&& ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh \
	\
	# Create the pwsh-preview symbolic link that points to powershell
	&& ln -s ${PS_INSTALL_FOLDER}/pwsh /usr/bin/pwsh-preview \
	# Give all user execute permissions and remove write permissions for others
	&& chmod a+x,o-w ${PS_INSTALL_FOLDER}/pwsh \
	# intialize powershell module cache
	# and disable telemetry
	&& export POWERSHELL_TELEMETRY_OPTOUT=1 \
	&& pwsh \
	-NoLogo \
	-NoProfile \
	-Command " \
	\$ErrorActionPreference = 'Stop' ; \
	\$ProgressPreference = 'SilentlyContinue' ; \
	while(!(Test-Path -Path \$env:PSModuleAnalysisCachePath)) {  \
	Write-Host "'Waiting for $env:PSModuleAnalysisCachePath'" ; \
	Start-Sleep -Seconds 6 ; \
	}"

